import{_ as s,c as a,a2 as n,o as t}from"./chunks/framework.YPpNXepj.js";const o=JSON.parse('{"title":"使用指南","description":"","frontmatter":{},"headers":[],"relativePath":"guide/index.md","filePath":"guide/index.md"}'),e={name:"guide/index.md"};function p(l,i,h,r,d,k){return t(),a("div",null,i[0]||(i[0]=[n(`<h1 id="使用指南" tabindex="-1">使用指南 <a class="header-anchor" href="#使用指南" aria-label="Permalink to &quot;使用指南&quot;">​</a></h1><h3 id="_1-安装turing-plugin" tabindex="-1">1. 安装turing-plugin <a class="header-anchor" href="#_1-安装turing-plugin" aria-label="Permalink to &quot;1. 安装turing-plugin&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm install turing-plugin</span></span>
<span class="line"><span>或：</span></span>
<span class="line"><span>yarn add turing-plugin</span></span></code></pre></div><h3 id="_2-引入turing-plugin并使用公共方法" tabindex="-1">2. 引入turing-plugin并使用公共方法 <a class="header-anchor" href="#_2-引入turing-plugin并使用公共方法" aria-label="Permalink to &quot;2. 引入turing-plugin并使用公共方法&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { timeC, dataC } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;turing-plugin&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 判断是否为闰年</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> isLeap</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> timeC.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isLeapYear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 生成uuid</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> uuid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dataC.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generateUUID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h3 id="_3-标红解决" tabindex="-1">3. 标红解决 <a class="header-anchor" href="#_3-标红解决" aria-label="Permalink to &quot;3. 标红解决&quot;">​</a></h3><p>如果在你的项目里引入<code>turing-plugin</code>出现标红提示，需要在<code>vite-env.d.ts</code>文件中添加如下内容：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 解决import {} from &#39;turing-plugin&#39;标红问题。告诉typescript不用知道里面的具体类型定义</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">declare</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> module</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;turing-plugin&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div>`,8)]))}const c=s(e,[["render",p]]);export{o as __pageData,c as default};
