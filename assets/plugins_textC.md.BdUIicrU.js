import{_ as i,c as a,a2 as t,o as e}from"./chunks/framework.B5aVjmld.js";const c=JSON.parse('{"title":"textC","description":"","frontmatter":{},"headers":[],"relativePath":"plugins/textC.md","filePath":"plugins/textC.md"}'),n={name:"plugins/textC.md"};function l(p,s,h,k,r,E){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="textc" tabindex="-1">textC <a class="header-anchor" href="#textc" aria-label="Permalink to &quot;textC&quot;">​</a></h1><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { textC } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;turing-plugin&#39;</span></span></code></pre></div><h2 id="copytext" tabindex="-1">copyText <a class="header-anchor" href="#copytext" aria-label="Permalink to &quot;copyText&quot;">​</a></h2><p>复制文本</p><p><code>copyText(text, callback)</code></p><p><strong>参数：</strong></p><ol><li><code>text</code> 被复制的文本</li><li><code>callback</code>被复制后的回调，一般会在回调中添加复制成功的提示</li></ol><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">copyText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;这是一段被复制的文字&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// 复制成功的操作</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="setselectionrange" tabindex="-1">setSelectionRange <a class="header-anchor" href="#setselectionrange" aria-label="Permalink to &quot;setSelectionRange&quot;">​</a></h2><p>文本框自动聚焦</p><p><code>setSelectionRange(inputEl,selectionStart,selectionEnd)</code></p><p><strong>参数：</strong></p><p>若selectionEnd与selectionStart相等或者selectionEnd不传就是定位光标的位置，如果都传了并且值不相等就是选中从start到end间的字符</p><ol><li><code>inputEl</code> input元素的dom值，必传</li><li><code>selectionStart</code> 聚焦的开始下标, 必传</li><li><code>selectionEnd</code> 聚焦的结束下标, 非必传</li></ol><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;inputEl&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> v-model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;value&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">const value = ref&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(&#39;文本内容&#39;)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">const El = document.getElementById(&#39;inputEl&#39;)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">setSelectionRange(El, 2)   // 光标在本和内中间</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">setSelectionRange(El, 2,3) // 选中内容二字</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">setSelectionRange(El, 3,3) // 光标在容后面</span></span></code></pre></div><h2 id="replacesensitivewords" tabindex="-1">replaceSensitiveWords <a class="header-anchor" href="#replacesensitivewords" aria-label="Permalink to &quot;replaceSensitiveWords&quot;">​</a></h2><p>查找并替换敏感词</p><p><code>replaceSensitiveWords(text, sensitiveWords, callback)</code></p><p><strong>参数：</strong></p><ol><li><code>text</code>被匹配的文本</li><li><code>sensitiveWords</code> 敏感词集合 Array类型</li><li><code>callback</code>需要替换的操作</li></ol><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> v-html</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;newText&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">import { ref } from &#39;vue&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">import { textC } from &#39;turing-plugin&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">const text = &#39;这是一段含有敏感词的文本，色情、赌博&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">const sensitiveWords = [&#39;色情&#39;, &#39;赌博&#39; ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">const newText = ref(&#39;&#39;)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">// 将匹配到的敏感词进行标红处理</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">newText.value = textC.replaceSensitiveWords(text, sensitiveWords, (match) =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   return </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`&lt;span style=&quot;color:#F14D4D;&quot;&gt;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">match</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&lt;/span&gt;\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div>`,21)]))}const o=i(n,[["render",l]]);export{c as __pageData,o as default};
